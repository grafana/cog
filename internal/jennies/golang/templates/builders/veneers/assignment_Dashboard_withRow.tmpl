{{- define "pre_assignment_Dashboard_withRow" }}

    // Position the row on the grid
    if rowPanelResource.GridPos == nil || (rowPanelResource.GridPos.X == 0 && rowPanelResource.GridPos.Y == 0) {
        rowPanelResource.GridPos = &GridPos{
            X: 0, // beginning of the line
            Y: builder.currentY + builder.lastPanelHeight,

            H: 1,
            W: 24, // full width
        }
    }
{{- end }}

{{- define "post_assignment_Dashboard_withRow" }}

    // Reset the state for the next row
	builder.currentX = 0
	builder.currentY = rowPanelResource.GridPos.Y + 1
	builder.lastPanelHeight = 0

	// Position the row's panels on the grid
	for _, panel := range rowPanelResource.Panels {
		// The panel either has no position set, or it is the first panel of the dashboard.
		// In that case, we position it on the grid
		if panel.GridPos.X == 0 && panel.GridPos.Y == 0 {
			panel.GridPos.X = builder.currentX
			panel.GridPos.Y = builder.currentY
		}

		// Prepare the coordinates for the next panel
		builder.currentX += panel.GridPos.W
		builder.lastPanelHeight = max(builder.lastPanelHeight, panel.GridPos.H)

		// Check for grid width overflow?
		if builder.currentX >= 24 {
			builder.currentX = 0
			builder.currentY += builder.lastPanelHeight
			builder.lastPanelHeight = 0
		}
    }
{{- end }}
