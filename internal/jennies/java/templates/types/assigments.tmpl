{{- define "assignment" }}
    {{- template "constraints" .Assignment.Constraints }}
    {{- range .Assignment.NilChecks }}
        {{- template "nil_check" . }}
    {{- end }}

    {{- template "assignment_setup" (dict "Assignment" .Assignment "Value" .Assignment.Value) }}

    {{- $value := include "assignment_value" (dict "Assignment" .Assignment "Value" .Assignment.Value) -}}

    {{- $preTmpl := print "pre_assignment_" .BuilderName "_" .OptionName }}
    {{- includeIfExists $preTmpl (dict) -}}

    {{- template "assignment_method" (dict "Method" .Assignment.Method "Path" .Assignment.Path "Value" $value) -}}

    {{- $postTmpl := print "post_assignment_" .BuilderName "_" .OptionName }}
    {{- includeIfExists $postTmpl (dict) -}}

{{- end }}

{{- define "assignment_setup" }}
    {{- $castPath := formatCastValue $.Assignment.Path }}
    {{- with .Value.Argument }}
        {{- if not (eq $castPath.Value "") }}
        {{ if not $castPath.IsNilChecked }}{{ $castPath.Class }} {{ $castPath.Value | lowerCamelCase }}Resource = ({{- $castPath.Class }}) this.internal.{{ $castPath.Path }};{{ end }}
        {{ $castPath.Value | lowerCamelCase }}Resource.{{ lastPathIdentifier $.Assignment.Path }} = {{ .Name | lowerCamelCase }}{{ if or (typeHasBuilder .Type) (resolvesToComposableSlot .Type) }}.Build(){{ end }};
        {{- end }}
    {{- end }}
    {{- with .Value.Envelope }}
        {{- range .Values }}
        {{- template "assignment_setup" (dict "Assignment" $.Assignment "Value" .Value) }}
        {{- end }}

        {{- template "value_envelope" (dict "Assignment" $.Assignment "Envelope" .) }}
    {{- end }}
    {{- if and (not (eq .Value.Constant nil)) (not (eq $castPath.Value "")) }}
        {{ $castPath.Value | lowerCamelCase }}Resource.{{ lastPathIdentifier $.Assignment.Path }} = {{ .Value.Constant }};
    {{- end }}
{{- end }}

{{- define "assignment_value" }}
    {{- $castPath := formatCastValue $.Assignment.Path }}
    {{- if not (eq .Value.Constant nil) }}
        {{- if not (eq $castPath.Value "") }}
        {{- $castPath.Value | lowerCamelCase }}Resource
        {{- else }}
        {{- formatValue .Assignment.Path.Last.Type .Value.Constant }}
        {{- end }}
    {{- end }}
    {{- with .Value.Argument }}
        {{- if not (eq $castPath.Value "") }}
            {{- $castPath.Value | lowerCamelCase }}Resource
        {{- else if or (typeHasBuilder .Type) (resolvesToComposableSlot .Type) }}
            {{- .Name | escapeVar | lowerCamelCase }}.Build()
        {{- else }}
            {{- .Name | escapeVar | lowerCamelCase }}
        {{- end }}
    {{- end }}
    {{- with .Value.Envelope }}
        {{- .Type | formatType | lowerCamelCase }}
    {{- end }}
{{- end }}

{{- define "value_envelope" }}
    {{ $envelopeType := .Envelope.Type | formatType }}
        {{- $envelopeType }} {{ $envelopeType | lowerCamelCase }} = new {{ $envelopeType }}();
    {{- range .Envelope.Values }}
        {{- $value := include "assignment_value" (dict "Assignment" $.Assignment "Value" .Value) }}
        {{ $envelopeType | lowerCamelCase }}.{{ (index .Path 0).Identifier | lowerCamelCase }} = {{ $value }};
    {{- end }}
{{- end }}

{{- define "assignment_method" }}
    {{ $path := formatAssignmentPath .Path }}
        {{- if eq .Method "direct" }}this.internal.{{ $path }} = {{ .Value }};{{ end }}
        {{- if eq .Method "append" }}this.internal.{{ $path }}.add({{ .Value }});{{ end -}}
{{- end }}
