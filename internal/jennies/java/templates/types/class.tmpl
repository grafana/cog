package {{ .Package }};

{{ .Imports }}

{{- range .Comments }}
// {{ . }}
{{- end }}
public class {{ .Name }}{{ if .Extends }} extends {{ range $i, $e := .Extends }}{{ if gt $i 0 }}, {{ end }}{{ $e }}{{ end }}{{ end }}{{ if .Variant }} implements cog.variants.{{ .Variant }}{{ end }} {
    {{- template "types" dict "Fields" .Fields }}

    {{ if .HasBuilder }}
    protected {{ .Name }}(Builder builder) {
        {{- if .Extends }}
        super(builder);
        {{- else }}
        {{- range .Fields }}
        this.{{ .Name | escapeVar }} = builder.{{ .Name | escapeVar }};
        {{- end }}
        {{- end }}
    }
    {{- if not .Extends }}
    {{ template "builder" .Builder }}
    {{- end }}
    {{- end }}
}

{{- define "types" }}
    {{- range .Fields }}
    {{- range .Comments }}
    // {{ . }}
    {{- end }}
    public {{ .Type }} {{ .Name | escapeVar }};
    {{- end }}
{{- end }}
