package {{ .Package }};
{{- $class := include "class" . }}

{{ .Imports }}

{{- $class }}

{{- define "class" }}
{{- range .Comments }}
// {{ . }}
{{- end }}
public class {{ .Name }}{{ if .Extends }} extends {{ range $i, $e := .Extends }}{{ if gt $i 0 }}, {{ end }}{{ $e }}{{ end }}{{ end }}{{ if .Variant }} implements {{ .Variant }}{{ end }} {
    {{- template "types" dict "Fields" .Fields "ShouldAddAnnotation" .ShouldAddMarshalling }}

    {{- if and .ShouldAddMarshalling (not .Extends) }}
    public String toJSON() throws JsonProcessingException {
        ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
        return ow.writeValueAsString(this);
    }
    {{- end }}

    {{- if and .HasBuilder (not .Extends) }}
    {{- range .Builders }}
    {{- $builderName := gt (len $.Builders) 1 | ternary .BuilderName  "" }}
    {{ template "builder" (dict "Builder" . "BuilderName" $builderName) }}
    {{- end }}
    {{- end }}
}
{{- end }}

{{- define "types" }}
    {{- range .Fields }}
    {{- range .Comments }}
    // {{ . }}
    {{- end }}
    {{- if $.ShouldAddAnnotation }}
    @JsonProperty("{{ .Name }}")
    {{- end }}
    public {{ .Type }} {{ .Name | escapeVar }};

    {{- end }}
{{- end }}
