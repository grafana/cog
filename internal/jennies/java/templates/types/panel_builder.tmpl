package {{ .Package }};

{{- $panelBuilder := include "panelBuilder" . }}

{{ .Imports }}

{{- $panelBuilder }}

{{- define "panelBuilder" }}
public class PanelBuilder implements {{ if not (eq .ImportAlias "") }}{{ .ImportAlias }}.{{ end }}cog.Builder<Panel> {
    private Panel internal;

    public PanelBuilder({{- template "args" .Constructor.Args }}) {
        this.internal = new Panel();
        {{- range .Constructor.Assignments }}
            {{- template "assignment" (dict "Assignment" . "BuilderName" $.BuilderName "OptionName" "") }}
        {{- end }}
    }
    
    {{- range .Options }}
    public PanelBuilder {{ .Name | lowerCamelCase }}({{- template "args" .Args }}) {
        {{- range .Assignments }}
            {{- template "assignment" (dict "Assignment" . "BuilderName" "PanelBuilder" "OptionName" "Panel") }}
        {{- end }}
        return this;
    }
    {{- end }}
    
    public Panel build() {
        return this.internal;
    }
}
{{- end }}
