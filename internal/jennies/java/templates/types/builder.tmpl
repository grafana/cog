{{- define "builder" }}
    public static class {{ .BuilderName }}Builder {
        private {{ .ObjectName }} internal;
        
        {{- range .Properties }}
        private {{ .Type | formatBuilderFieldType }} {{ .Name | escapeVar }};
        {{- end }}
        
        public {{ .BuilderName }}Builder({{- template "args" .Constructor.Args }}) {
            this.internal = new {{ .ObjectName }}();
        {{- range .Constructor.Assignments }}
            {{- template "assignment" (dict "Assignment" . "BuilderName" $.BuilderName "OptionName" "") }}
        {{- end }}
        
        {{- range .Defaults }}
        {{- range .Initializers }}
        {{ . }}
        {{- end }}
        this.set{{ .OptionName }}({{ .Args|join ", " }});
        {{- end }}
        }
        
    {{- range $opt := .Options }}
    public {{ $.BuilderName }}Builder set{{ .Name | upperCamelCase }}({{- template "args" .Args }}) {
        {{- range .Assignments }}
            {{- template "assignment" (dict "Assignment" . "BuilderName" $.BuilderName "OptionName" $opt.Name) }}
        {{- end }}
        return this;
    }
    {{ end -}}
        
        public {{ .ObjectName }} build() {
            return this.internal;
        }
    }
{{- end }}
