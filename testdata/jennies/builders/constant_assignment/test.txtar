# Constant assignment.
-- builders_context.json --
{
  "Schemas": [
    {
      "Package": "sandbox",
      "Metadata": {},
      "Objects": [
        {
          "Name": "SomeStruct",
          "Type": {
            "Kind": "struct",
            "Nullable": false,
            "Struct": {
              "Fields": [
                {
                  "Name": "editable",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  },
                  "Required": true
                },
                {
                  "Name": "autoRefresh",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": true,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  },
                  "Required": false
                }
              ]
            }
          },
          "SelfRef": {
            "ReferredPkg": "sandbox",
            "ReferredType": "SomeStruct"
          }
        }
      ]
    }
  ],
  "Builders": [
    {
      "Schema": {
        "Package": "sandbox",
        "Metadata": {},
        "Objects": [
          {
            "Name": "SomeStruct",
            "Type": {
              "Kind": "struct",
              "Nullable": false,
              "Struct": {
                "Fields": [
                  {
                    "Name": "editable",
                    "Type": {
                      "Kind": "scalar",
                      "Nullable": false,
                      "Scalar": {
                        "ScalarKind": "boolean"
                      }
                    },
                    "Required": true
                  },
                  {
                    "Name": "autoRefresh",
                    "Type": {
                      "Kind": "scalar",
                      "Nullable": true,
                      "Scalar": {
                        "ScalarKind": "boolean"
                      }
                    },
                    "Required": false
                  }
                ]
              }
            },
            "SelfRef": {
              "ReferredPkg": "sandbox",
              "ReferredType": "SomeStruct"
            }
          }
        ]
      },
      "For": {
        "Name": "SomeStruct",
        "Type": {
          "Kind": "struct",
          "Nullable": false,
          "Struct": {
            "Fields": [
              {
                "Name": "editable",
                "Type": {
                  "Kind": "scalar",
                  "Nullable": false,
                  "Scalar": {
                    "ScalarKind": "boolean"
                  }
                },
                "Required": true
              },
              {
                "Name": "autoRefresh",
                "Type": {
                  "Kind": "scalar",
                  "Nullable": true,
                  "Scalar": {
                    "ScalarKind": "boolean"
                  }
                },
                "Required": false
              }
            ]
          }
        },
        "SelfRef": {
          "ReferredPkg": "sandbox",
          "ReferredType": "SomeStruct"
        }
      },
      "Package": "sandbox",
      "Name": "SomeStruct",
      "Options": [
        {
          "Name": "editable",
          "Args": [],
          "Assignments": [
            {
              "Path": [
                {
                  "Identifier": "editable",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  }
                }
              ],
              "Value": {
                "Constant": true
              },
              "Method": "direct"
            }
          ],
          "IsConstructorArg": false
        },
        {
          "Name": "readonly",
          "Args": [],
          "Assignments": [
            {
              "Path": [
                {
                  "Identifier": "editable",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  }
                }
              ],
              "Value": {
                "Constant": false
              },
              "Method": "direct"
            }
          ],
          "IsConstructorArg": false
        },
        {
          "Name": "autoRefresh",
          "Args": [],
          "Assignments": [
            {
              "Path": [
                {
                  "Identifier": "autoRefresh",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": true,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  }
                }
              ],
              "Value": {
                "Constant": true
              },
              "Method": "direct"
            }
          ],
          "IsConstructorArg": false
        },
        {
          "Name": "noAutoRefresh",
          "Args": [],
          "Assignments": [
            {
              "Path": [
                {
                  "Identifier": "autoRefresh",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": true,
                    "Scalar": {
                      "ScalarKind": "boolean"
                    }
                  }
                }
              ],
              "Value": {
                "Constant": false
              },
              "Method": "direct"
            }
          ],
          "IsConstructorArg": false
        }
      ]
    }
  ]
}

-- out/jennies/TypescriptBuilder --
== src/sandbox/somestruct_builder_gen.ts
import * as cog from '../cog';
import * as sandbox from '../sandbox';

export class SomeStructBuilder implements cog.Builder<sandbox.SomeStruct> {
    private readonly internal: sandbox.SomeStruct;

    constructor() {
        this.internal = sandbox.defaultSomeStruct();
    }

    build(): sandbox.SomeStruct {
        return this.internal;
    }

    editable(): this {
        this.internal.editable = true;
        return this;
    }

    readonly(): this {
        this.internal.editable = false;
        return this;
    }

    autoRefresh(): this {
        this.internal.autoRefresh = true;
        return this;
    }

    noAutoRefresh(): this {
        this.internal.autoRefresh = false;
        return this;
    }
}
-- out/jennies/GoBuilder --
== sandbox/somestruct_builder_gen.go
package sandbox

import (
	cog "github.com/grafana/cog/generated/cog"
)

var _ cog.Builder[SomeStruct] = (*SomeStructBuilder)(nil)

type SomeStructBuilder struct {
    internal *SomeStruct
    errors map[string]cog.BuildErrors
}

func NewSomeStructBuilder() *SomeStructBuilder {
	resource := &SomeStruct{}
	builder := &SomeStructBuilder{
		internal: resource,
		errors: make(map[string]cog.BuildErrors),
	}

	builder.applyDefaults()

	return builder
}

func (builder *SomeStructBuilder) Build() (SomeStruct, error) {
	var errs cog.BuildErrors

	for _, err := range builder.errors {
		errs = append(errs, cog.MakeBuildErrors("SomeStruct", err)...)
	}

	if len(errs) != 0 {
		return SomeStruct{}, errs
	}

	return *builder.internal, nil
}

func (builder *SomeStructBuilder) Editable() *SomeStructBuilder {
    builder.internal.Editable = true

    return builder
}

func (builder *SomeStructBuilder) Readonly() *SomeStructBuilder {
    builder.internal.Editable = false

    return builder
}

func (builder *SomeStructBuilder) AutoRefresh() *SomeStructBuilder {
            valAutoRefresh := true
    builder.internal.AutoRefresh = &valAutoRefresh

    return builder
}

func (builder *SomeStructBuilder) NoAutoRefresh() *SomeStructBuilder {
            valAutoRefresh := false
    builder.internal.AutoRefresh = &valAutoRefresh

    return builder
}

func (builder *SomeStructBuilder) applyDefaults() {
}
-- out/jennies/PythonBuilder --
== builders/sandbox.py
import typing
from ..cog import builder as cogbuilder
from ..models import sandbox


class SomeStruct(cogbuilder.Builder[sandbox.SomeStruct]):    
    __internal: sandbox.SomeStruct

    def __init__(self):
        self.__internal = sandbox.SomeStruct()

    def build(self) -> sandbox.SomeStruct:
        return self.__internal    
    
    def editable(self) -> typing.Self:        
        self.__internal.editable = True
    
        return self
    
    def readonly(self) -> typing.Self:        
        self.__internal.editable = False
    
        return self
    
    def auto_refresh(self) -> typing.Self:        
        self.__internal.auto_refresh = True
    
        return self
    
    def no_auto_refresh(self) -> typing.Self:        
        self.__internal.auto_refresh = False
    
        return self
    
