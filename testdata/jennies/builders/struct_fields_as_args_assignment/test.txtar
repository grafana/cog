# Struct fields as arguments, with init safeguards but no envelope
-- builders_context.json --
{
  "Schemas": [
    {
      "Package": "sandbox",
      "Metadata": {},
      "Objects": [
        {
          "Name": "SomeStruct",
          "Type": {
            "Kind": "struct",
            "Nullable": false,
            "Struct": {
              "Fields": [
                {
                  "Name": "time",
                  "Type": {
                    "Kind": "struct",
                    "Nullable": true,
                    "Struct": {
                      "Fields": [
                        {
                          "Name": "from",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now-6h",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        },
                        {
                          "Name": "to",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        }
                      ]
                    }
                  },
                  "Required": false
                }
              ]
            }
          },
          "SelfRef": {
            "ReferredPkg": "sandbox",
            "ReferredType": "SomeStruct"
          }
        }
      ]
    }
  ],
  "Builders": [
    {
      "Schema": {
        "Package": "sandbox",
        "Metadata": {},
        "Objects": [
          {
            "Name": "SomeStruct",
            "Type": {
              "Kind": "struct",
              "Nullable": false,
              "Struct": {
                "Fields": [
                  {
                    "Name": "time",
                    "Type": {
                      "Kind": "struct",
                      "Nullable": true,
                      "Struct": {
                        "Fields": [
                          {
                            "Name": "from",
                            "Type": {
                              "Kind": "scalar",
                              "Nullable": false,
                              "Default": "now-6h",
                              "Scalar": {
                                "ScalarKind": "string"
                              }
                            },
                            "Required": true
                          },
                          {
                            "Name": "to",
                            "Type": {
                              "Kind": "scalar",
                              "Nullable": false,
                              "Default": "now",
                              "Scalar": {
                                "ScalarKind": "string"
                              }
                            },
                            "Required": true
                          }
                        ]
                      }
                    },
                    "Required": false
                  }
                ]
              }
            },
            "SelfRef": {
              "ReferredPkg": "sandbox",
              "ReferredType": "SomeStruct"
            }
          }
        ]
      },
      "For": {
        "Name": "SomeStruct",
        "Type": {
          "Kind": "struct",
          "Nullable": false,
          "Struct": {
            "Fields": [
              {
                "Name": "time",
                "Type": {
                  "Kind": "struct",
                  "Nullable": true,
                  "Struct": {
                    "Fields": [
                      {
                        "Name": "from",
                        "Type": {
                          "Kind": "scalar",
                          "Nullable": false,
                          "Default": "now-6h",
                          "Scalar": {
                            "ScalarKind": "string"
                          }
                        },
                        "Required": true
                      },
                      {
                        "Name": "to",
                        "Type": {
                          "Kind": "scalar",
                          "Nullable": false,
                          "Default": "now",
                          "Scalar": {
                            "ScalarKind": "string"
                          }
                        },
                        "Required": true
                      }
                    ]
                  }
                },
                "Required": false
              }
            ]
          }
        },
        "SelfRef": {
          "ReferredPkg": "sandbox",
          "ReferredType": "SomeStruct"
        }
      },
      "Package": "sandbox",
      "Name": "SomeStruct",
      "Options": [
        {
          "Name": "time",
          "Args": [
            {
              "Name": "from",
              "Type": {
                "Kind": "scalar",
                "Nullable": false,
                "Default": "now-6h",
                "Scalar": {
                  "ScalarKind": "string"
                }
              }
            },
            {
              "Name": "to",
              "Type": {
                "Kind": "scalar",
                "Nullable": false,
                "Default": "now",
                "Scalar": {
                  "ScalarKind": "string"
                }
              }
            }
          ],
          "Assignments": [
            {
              "Path": [
                {
                  "Identifier": "time",
                  "Type": {
                    "Kind": "struct",
                    "Nullable": true,
                    "Struct": {
                      "Fields": [
                        {
                          "Name": "from",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now-6h",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        },
                        {
                          "Name": "to",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        }
                      ]
                    }
                  }
                },
                {
                  "Identifier": "from",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Default": "now-6h",
                    "Scalar": {
                      "ScalarKind": "string"
                    }
                  }
                }
              ],
              "Value": {
                "Argument": {
                  "Name": "from",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Scalar": {
                      "ScalarKind": "string"
                    }
                  }
                }
              },
              "Method": "direct"
            },
            {
              "Path": [
                {
                  "Identifier": "time",
                  "Type": {
                    "Kind": "struct",
                    "Nullable": true,
                    "Struct": {
                      "Fields": [
                        {
                          "Name": "from",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now-6h",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        },
                        {
                          "Name": "to",
                          "Type": {
                            "Kind": "scalar",
                            "Nullable": false,
                            "Default": "now",
                            "Scalar": {
                              "ScalarKind": "string"
                            }
                          },
                          "Required": true
                        }
                      ]
                    }
                  }
                },
                {
                  "Identifier": "to",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Default": "now",
                    "Scalar": {
                      "ScalarKind": "string"
                    }
                  }
                }
              ],
              "Value": {
                "Argument": {
                  "Name": "to",
                  "Type": {
                    "Kind": "scalar",
                    "Nullable": false,
                    "Scalar": {
                      "ScalarKind": "string"
                    }
                  }
                }
              },
              "Method": "direct"
            }
          ],
          "IsConstructorArg": false
        }
      ]
    }
  ]
}

-- out/jennies/TypescriptBuilder --
== src/sandbox/somestruct_builder_gen.ts
import * as cog from '../cog';
import * as sandbox from '../sandbox';

export class SomeStructBuilder implements cog.Builder<sandbox.SomeStruct> {
    private readonly internal: sandbox.SomeStruct;

    constructor() {
        this.internal = sandbox.defaultSomeStruct();
    }

    build(): sandbox.SomeStruct {
        return this.internal;
    }

    time(from: string,to: string): this {
        if (!this.internal.time) {
            this.internal.time = {
	from: "now-6h",
	to: "now",
};
        }
        this.internal.time.from = from;
        if (!this.internal.time) {
            this.internal.time = {
	from: "now-6h",
	to: "now",
};
        }
        this.internal.time.to = to;
        return this;
    }
}
-- out/jennies/GoBuilder --
== sandbox/somestruct_builder_gen.go
package sandbox

import (
	cog "github.com/grafana/cog/generated/cog"
)

var _ cog.Builder[SomeStruct] = (*SomeStructBuilder)(nil)

type SomeStructBuilder struct {
    internal *SomeStruct
    errors map[string]cog.BuildErrors
}

func NewSomeStructBuilder() *SomeStructBuilder {
	resource := &SomeStruct{}
	builder := &SomeStructBuilder{
		internal: resource,
		errors: make(map[string]cog.BuildErrors),
	}

	builder.applyDefaults()

	return builder
}

func (builder *SomeStructBuilder) Build() (SomeStruct, error) {
	var errs cog.BuildErrors

	for _, err := range builder.errors {
		errs = append(errs, cog.MakeBuildErrors("SomeStruct", err)...)
	}

	if len(errs) != 0 {
		return SomeStruct{}, errs
	}

	return *builder.internal, nil
}

func (builder *SomeStructBuilder) Time(from string,to string) *SomeStructBuilder {
    if builder.internal.Time == nil {
	builder.internal.Time = &struct {
	From string `json:"from"`
	To string `json:"to"`
}{}
}
    builder.internal.Time.From = from
    if builder.internal.Time == nil {
	builder.internal.Time = &struct {
	From string `json:"from"`
	To string `json:"to"`
}{}
}
    builder.internal.Time.To = to

    return builder
}

func (builder *SomeStructBuilder) applyDefaults() {
}
-- out/jennies/PythonBuilder --
== builders/sandbox.py
import typing
from ..cog import builder as cogbuilder
from ..models import sandbox


class SomeStruct(cogbuilder.Builder[sandbox.SomeStruct]):    
    __internal: sandbox.SomeStruct

    def __init__(self):
        self.__internal = sandbox.SomeStruct()

    def build(self) -> sandbox.SomeStruct:
        return self.__internal    
    
    def time(self, from_val: str, to: str) -> typing.Self:        
        if self.__internal.time is None:
            self.__internal.time = "unknown"
        
        assert isinstance(self.__internal.time, unknown)
        
        self.__internal.time.from_val = from_val    
        if self.__internal.time is None:
            self.__internal.time = "unknown"
        
        assert isinstance(self.__internal.time, unknown)
        
        self.__internal.time.to = to
    
        return self
    
