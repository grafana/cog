# Scalar types.
-- ir.json --
{
    "Package": "scalars",
    "Objects": [
        {
            "Name": "constTypeString",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "string", "Value": "foo"}
            }
        },

        {
            "Name": "scalarTypeAny",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "any"}
            }
        },
        {
            "Name": "ScalarTypeBool",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "bool"}
            }
        },

        {
            "Name": "ScalarTypeBytes",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "bytes"}
            }
        },
        {
            "Name": "ScalarTypeString",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "string"}
            }
        },

        {
            "Name": "ScalarTypeFloat32",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "float32"}
            }
        },
        {
            "Name": "ScalarTypeFloat64",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "float64"}
            }
        },

        {
            "Name": "ScalarTypeUint8",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "uint8"}
            }
        },
        {
            "Name": "ScalarTypeUint16",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "uint16"}
            }
        },
        {
            "Name": "ScalarTypeUint32",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "uint32"}
            }
        },
        {
            "Name": "ScalarTypeUint64",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "uint64"}
            }
        },

        {
            "Name": "ScalarTypeInt8",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "int8"}
            }
        },
        {
            "Name": "ScalarTypeInt16",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "int16"}
            }
        },
        {
            "Name": "ScalarTypeInt32",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "int32"}
            }
        },
        {
            "Name": "ScalarTypeInt64",
            "Type": {
                "Kind": "scalar",
                "Scalar": {"ScalarKind": "int64"}
            }
        }
    ]
}
-- out/jennies/TypescriptRawTypes --
== src/scalars/types_gen.ts
export const constTypeString = "foo";

export type scalarTypeAny = any;

export const defaultScalarTypeAny = (): scalarTypeAny => ({});

export type ScalarTypeBool = boolean;

export const defaultScalarTypeBool = (): ScalarTypeBool => (false);

export type ScalarTypeBytes = string;

export const defaultScalarTypeBytes = (): ScalarTypeBytes => ("");

export type ScalarTypeString = string;

export const defaultScalarTypeString = (): ScalarTypeString => ("");

export type ScalarTypeFloat32 = number;

export const defaultScalarTypeFloat32 = (): ScalarTypeFloat32 => (0);

export type ScalarTypeFloat64 = number;

export const defaultScalarTypeFloat64 = (): ScalarTypeFloat64 => (0);

export type ScalarTypeUint8 = number;

export const defaultScalarTypeUint8 = (): ScalarTypeUint8 => (0);

export type ScalarTypeUint16 = number;

export const defaultScalarTypeUint16 = (): ScalarTypeUint16 => (0);

export type ScalarTypeUint32 = number;

export const defaultScalarTypeUint32 = (): ScalarTypeUint32 => (0);

export type ScalarTypeUint64 = number;

export const defaultScalarTypeUint64 = (): ScalarTypeUint64 => (0);

export type ScalarTypeInt8 = number;

export const defaultScalarTypeInt8 = (): ScalarTypeInt8 => (0);

export type ScalarTypeInt16 = number;

export const defaultScalarTypeInt16 = (): ScalarTypeInt16 => (0);

export type ScalarTypeInt32 = number;

export const defaultScalarTypeInt32 = (): ScalarTypeInt32 => (0);

export type ScalarTypeInt64 = number;

export const defaultScalarTypeInt64 = (): ScalarTypeInt64 => (0);

-- out/jennies/GoRawTypes --
== scalars/types_gen.go
package scalars

const ConstTypeString = "foo"

type ScalarTypeAny any

type ScalarTypeBool bool

type ScalarTypeBytes []byte

type ScalarTypeString string

type ScalarTypeFloat32 float32

type ScalarTypeFloat64 float64

type ScalarTypeUint8 uint8

type ScalarTypeUint16 uint16

type ScalarTypeUint32 uint32

type ScalarTypeUint64 uint64

type ScalarTypeInt8 int8

type ScalarTypeInt16 int16

type ScalarTypeInt32 int32

type ScalarTypeInt64 int64

-- out/jennies/PythonRawTypes --
== models/scalars.py
import typing


ConstTypeString = typing.Literal["foo"]


ScalarTypeAny = object


ScalarTypeBool = bool


ScalarTypeBytes = bytes


ScalarTypeString = str


ScalarTypeFloat32 = float


ScalarTypeFloat64 = float


ScalarTypeUint8 = int


ScalarTypeUint16 = int


ScalarTypeUint32 = int


ScalarTypeUint64 = int


ScalarTypeInt8 = int


ScalarTypeInt16 = int


ScalarTypeInt32 = int


ScalarTypeInt64 = int
