# Basic struct with optional fields.
-- ir.json --
{
    "Package": "struct_optional_fields",
    "Objects": [
        {
            "Name": "SomeStruct",
            "Type": {
                "Kind": "struct",
                "Struct": {
                    "Fields": [
                        {
                            "Name": "FieldRef",
                            "Required": false,
                            "Type": {
                                "Kind": "ref",
                                "Ref": {"ReferredPkg": "struct_optional_fields", "ReferredType": "SomeOtherStruct"}
                            }
                        },
                        {
                            "Name": "FieldString",
                            "Required": false,
                            "Type": {
                                "Kind": "scalar",
                                "Scalar": {"ScalarKind": "string"}
                            }
                        },
                        {
                            "Name": "Operator",
                            "Required": false,
                            "Type": {
                                "Kind": "enum",
                                "Enum": {
                                    "Values": [
                                        {
                                            "Name": "GreaterThan",
                                            "Type": {
                                                "Kind": "scalar",
                                                "Scalar": {"ScalarKind": "string"}
                                            },
                                            "Value": ">"
                                        },
                                        {
                                            "Name": "LessThan",
                                            "Type": {
                                                "Kind": "scalar",
                                                "Scalar": {"ScalarKind": "string"}
                                            },
                                            "Value": "<"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "Name": "FieldArrayOfStrings",
                            "Required": false,
                            "Type": {
                                "Kind": "array",
                                "Array": {
                                    "ValueType": {
                                        "Kind": "scalar",
                                        "Scalar": {"ScalarKind": "string"}
                                    }
                                }
                            }
                        },
                        {
                            "Name": "FieldAnonymousStruct",
                            "Required": false,
                            "Type": {
                                "Kind": "struct",
                                "Struct": {
                                    "Fields": [
                                        {
                                            "Name": "FieldAny",
                                            "Required": true,
                                            "Type": {
                                                "Kind": "scalar",
                                                "Scalar": {"ScalarKind": "any"}
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },

        {
            "Name": "SomeOtherStruct",
            "Type": {
                "Kind": "struct",
                "Struct": {
                    "Fields": [
                        {
                            "Name": "FieldAny",
                            "Required": true,
                            "Type": {
                                "Kind": "scalar",
                                "Scalar": {"ScalarKind": "any"}
                            }
                        }
                    ]
                }
            }
        }
    ]
}
-- out/jennies/TypescriptRawTypes --
== src/struct_optional_fields/types_gen.ts
export interface SomeStruct {
	FieldRef?: SomeOtherStruct;
	FieldString?: string;
	Operator?: ">" | "<";
	FieldArrayOfStrings?: string[];
	FieldAnonymousStruct?: {
		FieldAny: any;
	};
}

export const defaultSomeStruct = (): SomeStruct => ({
});

export interface SomeOtherStruct {
	FieldAny: any;
}

export const defaultSomeOtherStruct = (): SomeOtherStruct => ({
	FieldAny: {},
});

-- out/jennies/GoRawTypes --
== struct_optional_fields/types_gen.go
package struct_optional_fields

type SomeStruct struct {
	FieldRef *SomeOtherStruct `json:"FieldRef,omitempty"`
	FieldString *string `json:"FieldString,omitempty"`
	Operator *SomeStructOperator `json:"Operator,omitempty"`
	FieldArrayOfStrings []string `json:"FieldArrayOfStrings,omitempty"`
	FieldAnonymousStruct *struct {
	FieldAny any `json:"FieldAny"`
} `json:"FieldAnonymousStruct,omitempty"`
}

type SomeOtherStruct struct {
	FieldAny any `json:"FieldAny"`
}

type SomeStructOperator string
const (
	SomeStructOperatorGreaterThan SomeStructOperator = ">"
	SomeStructOperatorLessThan SomeStructOperator = "<"
)


