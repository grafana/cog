{{- define "object_dashboardv2_VizConfigKind_custom_unmarshal" }}
@classmethod
def from_json(cls, data: dict[str, typing.Any]) -> typing.Self:
    args: dict[str, typing.Any] = {}
{{ range $field := .Object.Type.Struct.Fields }}
    {{- if eq $field.Name "spec" }}
    if "{{ $field.Name }}" in data:
        args["{{ $field.Name }}"] = {{ template "object_dashboardv2_VizConfigKind_spec_unmarshal" (dict "Field" $field) }}
    {{- else if $field.Type.IsConcreteScalar }}
        {{ continue}}
    {{- else }}
    if "{{ $field.Name }}" in data:
        args["{{ $field.Name }}"] = {{ unmarshalForType $field.Type (print "data[\"" $field.Name "\"]") $field.Name }}
{{ end -}}
{{ end }}
    return cls(**args)
{{- end }}

{{- define "object_dashboardv2_VizConfigKind_spec_unmarshal" -}}
VizConfigSpec(
{{- range $field := (.Field.Type|resolveRefs).Struct.Fields }}
{{- $input := print "data[\"spec\"][\"" $field.Name "\"]" -}}
    {{ $field.Name|formatIdentifier }}=
{{- if eq $field.Name "options" -}}
    {{ template "object_dashboardv2_VizConfigKind_spec_options_unmarshal" }}
{{- else if eq $field.Name "fieldConfig" -}}
    {{ template "object_dashboardv2_VizConfigKind_spec_fieldConfig_unmarshal" }}
{{- else -}}
    {{ (unmarshalForType $field.Type $input $field.Name).DecodingCall }}
{{- end }} if {{ $input }} is not None else {{ defaultForType $field.Type}},
{{- end -}}
)
{{- end }}

{{- define "object_dashboardv2_VizConfigKind_spec_fieldConfig_unmarshal" -}}
None
{{- end }}

{{- define "object_dashboardv2_VizConfigKind_spec_options_unmarshal" -}}
{{- $input := print "data[\"spec\"][\"options\"]" -}}
{{- $cogruntime := importModule "cogruntime" "..cog" "runtime" -}}
{{ $cogruntime }}.panelcfg_options_from_json({{ $input }}, data["kind"])
{{- end }}
