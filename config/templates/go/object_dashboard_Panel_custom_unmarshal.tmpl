{{- define "object_dashboard_Panel_custom_unmarshal" }}
{{- $fmt := importStdPkg "fmt" -}}
{{- $json := importStdPkg "encoding/json" -}}
{{- $cog := importPkg "cog" }}
func (resource *{{ .Object.Name|upperCamelCase }}) UnmarshalJSON(raw []byte) error {
    if raw == nil {
        return nil
    }

    fields := make(map[string]json.RawMessage)
    if err := json.Unmarshal(raw, &fields); err != nil {
        return err
    }
    {{- range $field := .Object.Type.Struct.Fields }}
    {{- if eq $field.Name "options" }}
    {{ template "unmarshal_dashboard_panel_options" }}
	{{- else if eq $field.Name "fieldConfig" }}
	{{ template "unmarshal_dashboard_panel_fieldConfig" }}
	{{- else if eq $field.Name "targets" }}
	{{ continue }}
    {{- else }}
    if fields["{{ $field.Name }}"] != nil {
		if err := json.Unmarshal(fields["{{ $field.Name }}"], &resource.{{ $field.Name|upperCamelCase }}); err != nil {
			return fmt.Errorf("error decoding field '{{ $field.Name }}': %w", err)
		}
	}
    {{- end }}
    {{- end }}

	{{ template "unmarshal_dashboard_panel_targets" }}

    return nil
}

{{ end }}

{{- define "unmarshal_dashboard_panel_options" -}}
	if fields["options"] != nil {
		variantCfg, found := cog.ConfigForPanelcfgVariant(resource.Type)
		if found && variantCfg.OptionsUnmarshaler != nil {
			options, err := variantCfg.OptionsUnmarshaler(fields["options"])
			if err != nil {
				return err
			}
			resource.Options = options
		} else {
			if err := json.Unmarshal(fields["options"], &resource.Options); err != nil {
				return err
			}
		}
	}
{{- end -}}

{{- define "unmarshal_dashboard_panel_fieldConfig" -}}
	if fields["fieldConfig"] != nil {
		if err := json.Unmarshal(fields["fieldConfig"], &resource.FieldConfig); err != nil {
			return err
		}

		variantCfg, found := cog.ConfigForPanelcfgVariant(resource.Type)
		if found && variantCfg.FieldConfigUnmarshaler != nil {
			fakeFieldConfigSource := struct {
				Defaults struct {
					Custom json.RawMessage `json:"custom"`
				} `json:"defaults"`
			}{}
			if err := json.Unmarshal(fields["fieldConfig"], &fakeFieldConfigSource); err != nil {
				return err
			}

			if fakeFieldConfigSource.Defaults.Custom != nil {
				customFieldConfig, err := variantCfg.FieldConfigUnmarshaler(fakeFieldConfigSource.Defaults.Custom)
				if err != nil {
					return err
				}

				resource.FieldConfig.Defaults.Custom = customFieldConfig
			}
		}
	}
{{- end -}}

{{- define "unmarshal_dashboard_panel_targets" -}}
	if fields["targets"] != nil {
		dataqueryTypeHint := ""
		if resource.Datasource != nil && resource.Datasource.Type != nil {
			dataqueryTypeHint = *resource.Datasource.Type
		}

		targets, err := cog.UnmarshalDataqueryArray(fields["targets"], dataqueryTypeHint)
		if err != nil {
			return err
		}
		resource.Targets = targets
	}
{{- end -}}
