debug: true

parameters:
  output_dir: './generated'
  kind_registry_path: '../kind-registry'
  kind_registry_version: 'v10.4.x'
  grafana_version: 'v10.4.x'
  go_package_root: 'github.com/grafana/cog/generated'

inputs:
  - kind_registry:
      path: '%kind_registry_path%'
      version: '%kind_registry_version%'
      transformations:
        - '%__config_dir%/compiler/kind_registry.yaml'
  - jsonschema:
      url: 'https://raw.githubusercontent.com/grafana/grafana/main/pkg/expr/query.request.schema.json'
      package: expr
      transformations:
        - '%__config_dir%/compiler/expr_passes.yaml'
  - openapi:
      url: 'https://raw.githubusercontent.com/grafana/grafana/%grafana_version%/public/openapi3.json'
      no_validate: true
      package: alerting
      allowed_objects:
        - AlertRuleGroup
        - EmbeddedContactPoint
        - Route
        - MuteTimeInterval
        - NotificationTemplate
      transformations:
        - '%__config_dir%/compiler/alerting.yaml'

  # The schema for testdata queries was included in the kind-registry until v11.0.x
  - if: '"%grafana_version%" == "main" || semver("%grafana_version%").MoreThanEqual(semver("v11.0.x"))'
    jsonschema:
      url: 'https://raw.githubusercontent.com/grafana/grafana/%grafana_version%/pkg/tsdb/grafana-testdata-datasource/kinds/query.panel.schema.json'
      package: testdata
      transformations:
        - '%__config_dir%/compiler/testdata_passes.yaml'

transformations:
  schemas:
    - '%__config_dir%/compiler/common_passes.yaml'

  builders:
    - '%__config_dir%/veneers'

output:
  directory: '%output_dir%'

  types: true
  builders: true

  languages:
    - go:
        package_root: '%go_package_root%'
#    - jsonschema: {}
#    - openapi: {}
#    - python:
#        path_prefix: grafana_foundation_sdk
#    - typescript: {}
#    - java: {}
